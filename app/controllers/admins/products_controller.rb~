class ProductsController < ApplicationController
  #before_action :authenticate_user! || :authenticate_organization!
  before_action :set_product, only: [:show, :edit, :update, :destroy]  
  before_filter :org_id ,only: [:new] 
  #  before_filter :require_login
  # GET /products
  # GET /products.json
  def index
    if current_organization
      organization = Organization.find_by_email(current_organization.email)
      @products = organization.products
    else
      @products = Product.all
    end    
  end

  # GET /products/1
  # GET /products/1.json
  def show
    @product =  Product.find_by_id(params[:id])
  end

  # GET /products/new
  def new
    @product = Product.new
  end

  # GET /products/1/edit
  def edit
    @product = Product.find_by_id(params[:id])
  end

  # POST /products
  # POST /products.json
  def create
    @product = Product.new(product_params)  
    add_categories
    respond_to do |format|
      if @product.save
        format.html { redirect_to @product, notice: 'Product was successfully created.' }
        format.json { render :show, status: :created, location: @product }
      else
        format.html { render :new }
        format.json { render json: @product.errors, status: :unprocessable_entity }
      end
    end    
  end

  # PATCH/PUT /products/1
  # PATCH/PUT /products/1.json
  def update
    respond_to do |format|
      if @product.update(product_params)
         redirect_to @product, notice: 'Product was successfully updated.' 
#        format.html { redirect_to @product, notice: 'Product was successfully updated.' }
#        format.json { render :index, status: :ok, location: @product }
      else
        format.html { render :edit }
        format.json { render json: @product.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /products/1
  # DELETE /products/1.json
  def destroy
    @product.destroy
    respond_to do |format|
      format.html { redirect_to products_url, notice: 'Product was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_product
      @product = Product.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def product_params
      params.require(:product).permit(:name, :serial_number,:image, :organization_id , :category_ids)
    end
    
    
    def org_id
      if current_organization
        @org_id = current_organization.id
      else
        @org_id = params[:organization_id]
      end
    end
    
    def add_categories
      @product = Product.new(product_params)
      if params[:category_ids].present?
        params[:category_ids].each do |id|
          category = Category.find(id)
          @product.categories << category
        end
      else
        format.html { render :new , notice: 'Category cannot be null'}
      end
    end
    
end
